@model WebApplication2.Models.Review
<form id="@String.Format("ReviewsEdit{0}", Model.ID)">

    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-10">
                   
                    @Html.TextAreaFor(model => model.comments, new { @class = "form-control mceEditor", id= String.Format("ReviewsText{0}", Model.ID) })
                    @Html.ValidationMessageFor(model => model.comments, "", new { @class = "text-danger" })
        </div>
                <div class="col-md-2">
                    <a class="btn btn-sm btn-warning" onclick="CancelEdit('Reviews', @Model.ID, true);">
                        <span class="glyphicon glyphicon-backward" aria-hidden="true"></span>
                    </a>
                    <a class="btn btn-sm btn-primary" onclick="PostEditForm('Reviews', @Model.ID, true);">
                        <span class="glyphicon glyphicon-save" aria-hidden="true"></span>
                    </a>
                </div>
       </div>
</form>
<script>initMCE(); tinyMCE.EditorManager.execCommand('mceAddEditor', true, '@String.Format("ReviewsText{0}", Model.ID)');</script>

